# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
jobs:
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: Saves hello world to a file
          command: |
            mkdir /tmp/circlecitmp
            echo "Hello world" > /tmp/circlecitmp/output.txt
      - persist_to_workspace:
          root: /tmp
          paths:
            - circlecitmp/output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: /tmp/circlecitmp
      - run:
          name: Retrieves output.txt from workspace
          command: |
            cat /tmp/circlecitmp/output.txt
#  print_hello:
#    environment:
#      MESSAGE: "Hello"
#    docker:
#      - image: circleci/node:13.8.0
#    steps:
#      - run:
#          name: Says Hello
#          command: |
#            echo $MESSAGE
#      persist_to_workspace:

#  print_world:
#    environment:
#      MESSAGE: "World"
#    docker:
#      - image: circleci/node:13.8.0
#    steps:
#      - run:
#          name: Says World
#          command: |
#            echo $MESSAGE
#  print_circleci_info:
#    docker:
#      - image: circleci/node:13.8.0
#    steps:
#      - run: echo "This is the pipeline ID << pipeline.id >>"                 
#      - run: echo "This is the pipeline number << pipeline.number >>"
#      - run: echo "This is the pipeline project git url << pipeline.project.git_url >>"
#      - run: echo "This is the git branch << pipeline.git.branch >>"
#      - run: echo "This is the previous git revision << pipeline.git.base_revision >>"
#      - run: echo "Author $AUTHOR"
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
      - save_hello_world_output
      - print_output_file:
          requires: [save_hello_world_output]
#      - print_hello
#      - print_world:
#          requires: [print_hello]
#      - print_circleci_info
